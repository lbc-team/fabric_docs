服务发现
=================

为什么我们需要服务发现？
---------------------------------

应用程序通过连接 SDK 暴露的 API 完成这些事情 —— 在 peers 上执行链码，将交易提交给 orderers，更新交易的状态。

但是，SDK 需要大量信息，以便允许应用程序连接到相关的网络节点。除了通道中 orderers 与 peers 的 CA 与 TLS 证书
，与它们的 IP 地址与端口；还要提供相关的背书策略，和告知链码安装在哪些 peers 上（便于让应用程序知道要将链码提案发
给哪些 peers ）。


在 v1.2 之前，这些信息是静态编码的。然而，这种实现并不能对网络的改变进行动态响应（例如添加已安装相关链码的 peers，
或者 peers 临时掉线）。静态配置也不允许应用程序响应背书策略本身的更改（如新组织加入通道时可能发生的情况）。


此外，客户端应用程序无法知道哪些 peers 已更新账本，哪些未更新。 结果，该应用程序可能向「其账本数据与
网络其余部分不同步」的 peers 提交提案，从而导致交易在提交时被拒，最终导致浪费了资源。


**服务发现** 通过「让 peers 来计算所需动态信息，然后提供给 SDK 去使用」这种方式改善了这个过程。


服务发现在 Fabric 中是怎样工作的？
-------------------------------------

应用程序在启动时知道可访问哪些对于应用开发人员/管理员而言可信的 peers，以提供对「发现查询」的可信响应。
和应用程序在同一个组织内的 peer 会是一个好的候选 peer。请注意，为了使服务发现知晓 peers，必须为 peers
定义 ``EXTERNAL_ENDPOINT``。 要查看如何执行此操作，请查看我们的 :doc:`discovery-cli` 文档。

应用程序向服务发现发送一个配置查询，即可获得网络的静态信息，以供与网络中的其它节点进行通讯。
这些信息随时可以刷新 —— 通过向一个 peer 的服务发现发送后续查询的请求。

服务发现运行于 peers 上，利用 gossip 通讯层维护的元数据来得知哪些 peer 在线。服务发现也从 peer 节
点的状态数据库提取「背书策略」等信息。


有了服务发现，应用程序不必再指定要从哪些 peer 获得背书。SDK 只要依据给定的通道和链码 ID，向发现
服务发送一个简单的查询。服务发现就可以计算出包含下面两个对象的描述：

1. **布局**：peers 的分组清单，和每组中选出的相应数量的 peers。
2. **分组和 peer 的映射**：从布局中的分组到通道中的 peers。实践中，每一个分组通常由个体组织
中的 peers 构成（例如，某公司的 peers 是一个分组），但是因为服务 API 是通用的，因而忽略组织，使用「
分组」这个概念。


下面的示例描述了两个组织，每个组织中包含两个peer节点，且采用 ``AND(Org1, Org2)`` 的评估策略：

.. code-block:: JSON

   Layouts: [
        QuantitiesByGroup: {
          “Org1”: 1,
          “Org2”: 1,
        }
   ],
   EndorsersByGroups: {
     “Org1”: [peer0.org1, peer1.org1],
     “Org2”: [peer0.org2, peer1.org2]
   }

换而言之，背书策略要求 Org1 中的一个 peer 和 Org2 中的一个 peer 共同签名参与背书。此外，描述还提供了
组织中可用来背书的可用节点的名称（Org1 和 Org2 中的 ``peer0`` 和 ``peer1`` ）。

SDK 则从上述描述中随机选择一个布局。上例中，背书策略是 Org1 ``AND`` Org2 。如果 背书策略是 ``OR``
的话，SDK 会随机的选择 Org1 或者 Org2。因此两个组织中的任一个 peer 的签名既可满足背书策略。


SDK 选择布局后，它会依据客户端指定的标准选择 peers（因为知道账本高度，所以 SDK 能做这件事）。例如，依据
布局中每个节点的组的数量， SDK 可以选择账本高度高的 peer，或者排除已下线的 peer。如果没有 peer 满足标准，
SDK 则随机选择次优 peers。


服务发现的功能
~~~~~~~~~~~~


服务发现可以对如下的请求响应：

* **配置查询**：返回通道中所有组织的「MSPConfig」以及通道的 orderer 端。
* **Peers 成员查询**：返回已加入通道的 peers。
* **背书查询**：返回channel 中给定链码的背书策略描述。
* **本地 peers 成员查询**：返回查询请求中的 peer 节点的本地成员信息。缺省情况下， peer 节点需要
客户端具有管理员权限，才能回应这一请求。


特殊需求
~~~~~~~

当 peer 节点使用 TLS 时，客户端必须提供 TLS 证书才能连接 peer。如果 peer 节点没有配置要验证客户端的证书
（clientAuthRequired 为 false），TLS 证书可以自我验签。

.. Licensed under Creative Commons Attribution 4.0 International License
   https://creativecommons.org/licenses/by/4.0/

Fabric 中文文档由登链社区发起翻译，未经授权请勿转载。

译者：[李大狗](https://learnblockchain.cn/people/127)， 校对： [Alex](https://learnblockchain.cn/people/377)